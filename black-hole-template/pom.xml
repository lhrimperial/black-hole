<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.0.RELEASE</version>
    </parent>

    <groupId>com.github.black.hole</groupId>
    <artifactId>black-hole-template</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>template-api</module>
        <module>template-orm</module>
        <module>template-application</module>
        <module>template-domain</module>
        <module>template-infra</module>
        <module>template-integration</module>
        <module>template-main</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>

        <template-api.version>1.0-SNAPSHOT</template-api.version>
        <template-application.version>1.0-SNAPSHOT</template-application.version>
        <template-domain.version>1.0-SNAPSHOT</template-domain.version>
        <template-infra.version>1.0-SNAPSHOT</template-infra.version>
        <template-integration.version>1.0-SNAPSHOT</template-integration.version>
        <template-orm.version>1.0-SNAPSHOT</template-orm.version>
        <template-main.version>1.0-SNAPSHOT</template-main.version>

        <!--tools-->
        <guava.version>28.2-jre</guava.version>
        <fastjson.version>1.2.62</fastjson.version>
        <junit.version>4.12</junit.version>
        <loombok.version>1.18.6</loombok.version>
        <commons-pool2.version>2.8.1</commons-pool2.version>
        <commons-codec.version>1.11</commons-codec.version>

        <!--third frame-->
        <netty-all.version>4.1.25.Final</netty-all.version>
        <mvel.version>2.4.5.Final</mvel.version>
        <easy-excel.version>2.2.6</easy-excel.version>
        <apache.poi.version>4.0.1</apache.poi.version>
        <alibaba-dingtalk.version>1.0.1</alibaba-dingtalk.version>
        <hibernate-validator.version>5.4.1.Final</hibernate-validator.version>
        <dubbo.version>2.7.3</dubbo.version>
        <curator.version>4.2.0</curator.version>
        <zookeeper.version>3.4.14</zookeeper.version>
        <mapstruct.version>1.3.1.Final</mapstruct.version>

        <!--spring boot-->
        <spring-boot.version>2.2.0.RELEASE</spring-boot.version>

        <!--   DB     -->
        <mysql.version>5.1.40</mysql.version>
        <druid-spring-boot-stater.version>1.1.17</druid-spring-boot-stater.version>
        <mybatis-spring-boot-starter.version>2.1.1</mybatis-spring-boot-starter.version>
        <jedis.version>3.3.0</jedis.version>

        <!--compile-->
        <maven-pmd-plugin.version>3.13.0</maven-pmd-plugin.version>
        <p3c-pmd.version>2.0.0</p3c-pmd.version>
        <google.errorprone.version>2.3.3</google.errorprone.version>

        <!--app-->
        <app1.version>1.0-SNAPSHOT</app1.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.black.hole</groupId>
                <artifactId>template-api</artifactId>
                <version>${template-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.black.hole</groupId>
                <artifactId>template-application</artifactId>
                <version>${template-application.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.black.hole</groupId>
                <artifactId>template-domain</artifactId>
                <version>${template-domain.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.black.hole</groupId>
                <artifactId>template-infra</artifactId>
                <version>${template-infra.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.black.hole</groupId>
                <artifactId>template-integration</artifactId>
                <version>${template-integration.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.black.hole</groupId>
                <artifactId>template-orm</artifactId>
                <version>${template-orm.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.black.hole</groupId>
                <artifactId>template-main</artifactId>
                <version>${template-main.version}</version>
            </dependency>
            <!--tools-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${loombok.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty-all.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mvel</groupId>
                <artifactId>mvel2</artifactId>
                <version>${mvel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${apache.poi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easy-excel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>alibaba-dingtalk-service-sdk</artifactId>
                <version>${alibaba-dingtalk.version}</version>
            </dependency>

            <!--spring-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.hibernate.validator</groupId>
                        <artifactId>hibernate-validator</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <!--springBoot的aop-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!--db-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-stater.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>

            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!--dubbo-->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-client</artifactId>
                <version>${curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.zookeeper</groupId>
                        <artifactId>zookeeper</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--app-->
            <dependency>
                <groupId>com.github.black.hole</groupId>
                <artifactId>dubbo-api</artifactId>
                <version>${app1.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!--默认资源目录-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M2</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.commonjava.maven.enforcer</groupId>
                            <artifactId>enforce-managed-deps-rule</artifactId>
                            <version>1.0</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>enforce-java</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <!-- 只允许在dependencyManagement中管理版本号-->
                                    <!-- https://github.com/jdcasey/enforce-managed-deps-rule -->
                                    <requireManagedDeps
                                            implementation="org.commonjava.maven.enforcer.rule.EnforceManagedDepsRule">
                                        <checkProfiles>true</checkProfiles>
                                        <failOnViolation>true</failOnViolation>
                                    </requireManagedDeps>
                                    <requireJavaVersion>
                                        <version>${java.version}</version>
                                    </requireJavaVersion>

                                    <bannedDependencies>
                                        <searchTransitive>true</searchTransitive>
                                        <excludes>
                                            <exclude>com.xiaoleilu:hutool-all</exclude>
                                            <!-- 版本号必须大于1.2.56，低版本有安全漏洞 -->
                                            <exclude>com.alibaba:fastjson:(,1.2.56)</exclude>
                                            <exclude>org.testng:testng</exclude>
                                            <exclude>eleme-jarch:fuss-interface</exclude>
                                        </excludes>
                                        <includes>
                                            <!-- 版本必须大于等于2.9.0，否则埋点会失效 -->
                                            <include>redis.clients:jedis:[2.9.0,)</include>
                                            <!-- mybatis版本必须大于等于3.4.5，否则java8相关时间入库不支持 -->
                                            <include>org.mybatis:mybatis:[3.4.5,)</include>
                                        </includes>
                                    </bannedDependencies>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding>
                        <showWarnings>true</showWarnings>
                        <showDeprecation>true</showDeprecation>
                        <compilerArgs>
                            <arg>-Xlint:all,-options,-path,-processing</arg>
                            <arg>-Werror</arg>
                            <arg>-parameters</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M1</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit47</artifactId>
                            <version>3.0.0-M1</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <!-- 打包源文件jar包 -->
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <attach>true</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <!-- 如果你使用了Lombok, 注意不要将phase设置成deploy，否则Swagger文档无法显示有Lombok标注的类成员的JavaDoc -->
                            <phase>compile</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--强制格式化插件 google-java-format Asop Style-->
                <plugin>
                    <groupId>com.coveo</groupId>
                    <artifactId>fmt-maven-plugin</artifactId>
                    <version>2.9</version>
                    <configuration>
                        <style>aosp</style>
                        <verbose>true</verbose>
                        <skip>false</skip>
                        <skipSortingImports>true</skipSortingImports>
                    </configuration>
                    <executions>
                        <execution>
                            <id>google-aosp-style-check</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <configuration>
                        <linkXRef>false</linkXRef>
                        <includeTests>true</includeTests>
                        <showPmdLog>true</showPmdLog>
                        <rulesets>
                            <ruleset>/rulesets/java/ali-comment.xml</ruleset>
                            <ruleset>/rulesets/java/ali-concurrent.xml</ruleset>
                            <ruleset>/rulesets/java/ali-constant.xml</ruleset>
                            <ruleset>/rulesets/java/ali-exception.xml</ruleset>
                            <ruleset>/rulesets/java/ali-flowcontrol.xml</ruleset>
                            <ruleset>/rulesets/java/ali-naming.xml</ruleset>
                            <ruleset>/rulesets/java/ali-oop.xml</ruleset>
                            <ruleset>/rulesets/java/ali-orm.xml</ruleset>
                            <ruleset>/rulesets/java/ali-other.xml</ruleset>
                            <ruleset>/rulesets/java/ali-set.xml</ruleset>
                        </rulesets>
                        <aggregate>false</aggregate>
                        <failOnViolation>true</failOnViolation>
                        <failurePriority>1</failurePriority>
                        <printFailingErrors>true</printFailingErrors>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.alibaba.p3c</groupId>
                            <artifactId>p3c-pmd</artifactId>
                            <version>${p3c-pmd.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>pmd-ali-p3c-check</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>check</goal>
                                <goal>cpd</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

</project>
